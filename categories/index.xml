<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Categories on /home/dgalizzi</title>
    <link>https://dgalizzi.github.io/categories/</link>
    <description>Recent content in Categories on /home/dgalizzi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://dgalizzi.github.io/categories/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>First</title>
      <link>https://dgalizzi.github.io/posts/first/</link>
      <pubDate>Thu, 15 Apr 2021 23:12:48 -0300</pubDate>
      
      <guid>https://dgalizzi.github.io/posts/first/</guid>
      <description>Average example implementation on C++:
#include &amp;lt;omp.h&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;numeric&amp;gt;using namespace std; // Non-parallel average function double avg(const vector&amp;lt;double&amp;gt; &amp;amp;v) { double sum = accumulate(v.begin(), v.end(), 0.0); return sum/v.size(); } // Parallel average function double pavg(const vector&amp;lt;double&amp;gt; &amp;amp;v) { // to do } int main() { vector&amp;lt;double&amp;gt; v(1000000); for (int i = 0 ; i &amp;lt; v.size() ; i ++) v[i] = 2*i; cout &amp;lt;&amp;lt; &amp;#34;Average: &amp;#34; &amp;lt;&amp;lt; avg(v) &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; &amp;#34;Parallel average: &amp;#34; &amp;lt;&amp;lt; pavg(v) &amp;lt;&amp;lt; endl; return 0; } </description>
    </item>
    
    
  </channel>
</rss>
